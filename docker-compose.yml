services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=mydatabase
      - DB_PORT=5432
      - AWS_ACCESS_KEY_ID=YVF1ZNVVLWJQSJ73U0KP
      - AWS_SECRET_ACCESS_KEY=p1rTUNH65GyRagIngARAZ1S91Vf2vEY8tU3xMruT
      - S3_ENDPOINT=http://s3.regru.cloud
      - S3_REGION=ru-1
      - S3_BUCKET=media
      - API_SECRET=e4a792f89fd542fbf74ea35aa02f86a0ce306086c292fb601bdfed7449a6086e
      - HASH_SALT=a8536495aab331da48d5b6cab5c3b98c
      - JWT_SECRET=c30f900157188ebb51cbf74b8644d4e381cd2e2cab577ced2e8ecea6bfe93abe
      - ACCESS_TOKEN_TTL=900
      - REFRESH_TOKEN_TTL=86400 
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  network1:
    driver: overlay
    driver_opts:
      com.docker.network.driver.mtu: 1450
